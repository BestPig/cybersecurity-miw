message int_field
{
	repeated int32 int_reap = 1;
}

message string_field
{
	repeated string str_reap = 1;
	repeated int32 str_count = 2; /* for union with counters. */
}

message bool_field
{
	repeated bool bool_reap = 1;
}

message float_field
{
	repeated float float_reap = 1;
}

message field
{
	required string name = 1;
	optional sint32 pos = 2 [default = -1]; /* field position, allows to skip fields */
	required string type = 3; /* field type: double, float, string, ... */
	optional bool key = 4 [default = false]; /* whether this field is use as key or part of the key */
	optional bool aggregated = 5; /* whether to aggregate values of this field. Obviously stored. */
	optional string aggregation = 6; /* type of aggregation (e.g. sum, union, ...) */
	optional string processing = 7; /* field post-processing filter (e.g. day, ...) */
	
	optional int_field int_fi = 8;
	optional string_field str_fi = 9;
	optional bool_field bool_fi = 10;
	optional float_field real_fi = 11;
	optional uint32 count = 12; /* aggregation counter. */
}

message logdef
{
	required string format_name = 1;  /* log format name */
	required string delims = 2; /* field delimiters */
	repeated field fields = 3;  /* definition of log fields */
	optional string appname = 4; /* application name for the log set. */
	optional string quotechar = 5;
	optional string commentchar = 6;
}