#!/usr/bin/python

import subprocess, sys

commonArgs = '-q'
sanityRun = True

def do_test(prog, args, sanityArgs = None):
    cmd = ['./obj/%s' % prog]
    if sanityRun:
        if not sanityArgs:
            print "skip %s: No sanity args provided" % prog
            return
        cmd.append(sanityArgs)
    else:
        cmd.append(args)
    cmd.append(commonArgs)
    c = ' '.join(cmd)
    print c
    p = subprocess.Popen(c, shell = True)
    p.communicate()
    if p.returncode != 0:
        print '---------- %s failed ----------' % prog

do_test("wrmem", "", "-s 1");
do_test("kmeans", "10 16 5000000 40", "10 16 5000 40");
do_test("pca", "-R 2048 -C 2048", "-R 100 -C 100");
do_test("matrix_mult", "-l 2048", "-l 100");
do_test("hist", "data/hist-2.6g.bmp");

# The input is generated via data/data-gen.sh
do_test("linear_regression", "data/lr_4GB.txt");

# The input is generated via data/data-gen.sh
do_test("string_match", "data/sm_1GB.txt");

do_test("wc", "data/wc/300MB_1M_Keys.txt");
# this input is used for comparision with hadoop
do_test("wc", "data/wc/10MB.txt -p 1");

# many keys and few duplicates
do_test("wr", "data/wr/100MB_1M_Keys.txt");
# few keys and many duplicates
do_test("wr", "data/wr/100MB_100K_Keys.txt");
# many keys and many duplicates. The input is generated via data/data-gen.sh
do_test("wr", "data/wr/800MB.txt");
# many keys and many duplicates, but unpredictable. The input is generated by
# data/data-gen.sh
do_test("wr", "data/wr/500MB.txt");

